node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "data/train_arlu.tfrecord"
      }
    }
  }
}
node {
  name: "flat_filenames/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flat_filenames"
  op: "Reshape"
  input: "Const"
  input: "flat_filenames/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "num_parallel_calls_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_wBeAOCZE1EI"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7680
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7680
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7680
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7680
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7680
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7680
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:3"
  input: "Upsample/Deconvolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03827327862381935
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03827327862381935
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/max"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/bias"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "Upsample/Deconvolution/conv2d_transpose/Shape"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice/stack"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice/stack_1"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "Upsample/Deconvolution/conv2d_transpose/Shape"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice_1/stack"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice_1/stack_1"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/strided_slice_2"
  op: "StridedSlice"
  input: "Upsample/Deconvolution/conv2d_transpose/Shape"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice_2/stack"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice_2/stack_1"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/mul"
  op: "Mul"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice_1"
  input: "Upsample/Deconvolution/conv2d_transpose/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/add"
  op: "Add"
  input: "Upsample/Deconvolution/conv2d_transpose/mul"
  input: "Upsample/Deconvolution/conv2d_transpose/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/mul_1"
  op: "Mul"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice_2"
  input: "Upsample/Deconvolution/conv2d_transpose/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/add_1"
  op: "Add"
  input: "Upsample/Deconvolution/conv2d_transpose/mul_1"
  input: "Upsample/Deconvolution/conv2d_transpose/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/stack"
  op: "Pack"
  input: "Upsample/Deconvolution/conv2d_transpose/strided_slice"
  input: "Upsample/Deconvolution/conv2d_transpose/add"
  input: "Upsample/Deconvolution/conv2d_transpose/add_1"
  input: "Upsample/Deconvolution/conv2d_transpose/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "Upsample/Deconvolution/conv2d_transpose/stack"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/read"
  input: "Upsample/Deconvolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 16
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Deconvolution/conv2d_transpose/conv2d_transpose"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Deconvolution/Relu"
  op: "Relu"
  input: "Upsample/Deconvolution/conv2d_transpose/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03827327862381935
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03827327862381935
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/max"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice"
  op: "StridedSlice"
  input: "Upsample/Deconvolution/conv2d_transpose_1/Shape"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice/stack"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice/stack_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_1"
  op: "StridedSlice"
  input: "Upsample/Deconvolution/conv2d_transpose_1/Shape"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_1/stack"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_1/stack_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_2"
  op: "StridedSlice"
  input: "Upsample/Deconvolution/conv2d_transpose_1/Shape"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_2/stack"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_2/stack_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/mul"
  op: "Mul"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/add"
  op: "Add"
  input: "Upsample/Deconvolution/conv2d_transpose_1/mul"
  input: "Upsample/Deconvolution/conv2d_transpose_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/mul_1"
  op: "Mul"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice_2"
  input: "Upsample/Deconvolution/conv2d_transpose_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/add_1"
  op: "Add"
  input: "Upsample/Deconvolution/conv2d_transpose_1/mul_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/stack"
  op: "Pack"
  input: "Upsample/Deconvolution/conv2d_transpose_1/strided_slice"
  input: "Upsample/Deconvolution/conv2d_transpose_1/add"
  input: "Upsample/Deconvolution/conv2d_transpose_1/add_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "Upsample/Deconvolution/conv2d_transpose_1/stack"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/read"
  input: "Upsample/Deconvolution/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 16
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Deconvolution/Relu_1"
  op: "Relu"
  input: "Upsample/Deconvolution/conv2d_transpose_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Upsample/Deconvolution/Squeeze"
  op: "Squeeze"
  input: "Upsample/Deconvolution/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/kernel"
  input: "Upsample/Encode_feature/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/bias"
  input: "Upsample/Encode_feature/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d/kernel/read"
  input: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/kernel"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/bias"
  input: "Upsample/Encode_feature/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_1/kernel/read"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/kernel"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/bias"
  input: "Upsample/Encode_feature/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_2/kernel/read"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/kernel"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/bias"
  input: "Upsample/Encode_feature/conv1d_3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_3/kernel/read"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/kernel"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/bias"
  input: "Upsample/Encode_feature/conv1d_4/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_4/kernel/read"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/kernel"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/bias"
  input: "Upsample/Encode_feature/conv1d_5/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_5/kernel/read"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/kernel"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/bias"
  input: "Upsample/Encode_feature/conv1d_6/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_6/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_6/kernel/read"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_6/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/kernel"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_7/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/bias"
  input: "Upsample/Encode_feature/conv1d_7/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_7/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_7/kernel/read"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_7/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/kernel"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_8/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/bias"
  input: "Upsample/Encode_feature/conv1d_8/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_8/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_8/kernel/read"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_8/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/kernel"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_9/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/bias"
  input: "Upsample/Encode_feature/conv1d_9/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_9/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_9/kernel/read"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_9/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/kernel"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_10/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/bias"
  input: "Upsample/Encode_feature/conv1d_10/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_10/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_10/kernel/read"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_10/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/kernel"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_11/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/bias"
  input: "Upsample/Encode_feature/conv1d_11/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_11/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_11/kernel/read"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_11/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/kernel"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_12/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/bias"
  input: "Upsample/Encode_feature/conv1d_12/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_12/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_12/kernel/read"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_12/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/kernel"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_13/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/bias"
  input: "Upsample/Encode_feature/conv1d_13/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_13/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_13/kernel/read"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_13/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/kernel"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_14/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/bias"
  input: "Upsample/Encode_feature/conv1d_14/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_14/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_14/kernel/read"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_14/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/kernel"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_15/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/bias"
  input: "Upsample/Encode_feature/conv1d_15/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_15/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_15/kernel/read"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_15/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/kernel"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_16/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/bias"
  input: "Upsample/Encode_feature/conv1d_16/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_16/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_16/kernel/read"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_16/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/kernel"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_17/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/bias"
  input: "Upsample/Encode_feature/conv1d_17/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_17/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_17/kernel/read"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_17/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/kernel"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_18/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/bias"
  input: "Upsample/Encode_feature/conv1d_18/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_18/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_18/kernel/read"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_18/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/max"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/RandomUniform"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/mul"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/kernel"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_19/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/bias"
  input: "Upsample/Encode_feature/conv1d_19/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_19/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Upsample/Deconvolution/Squeeze"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Upsample/Encode_feature/conv1d_19/kernel/read"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/conv1d/Conv2D"
  op: "Conv2D"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/conv1d/Squeeze"
  op: "Squeeze"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/BiasAdd"
  op: "BiasAdd"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/Squeeze"
  input: "Upsample/Encode_feature/conv1d_19/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/Embed_convolution/conv1d/kernel"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/Embed_convolution/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/Embed_convolution/conv1d/kernel/read"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/Tanh"
  op: "Tanh"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/Pad"
  op: "Pad"
  input: "Wavenet/Embed_convolution/Tanh"
  input: "Wavenet/ResNet/ResBlock_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/Pad"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice"
  input: "Upsample/Encode_feature/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_1/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_1/Tanh"
  input: "Wavenet/ResNet/ResBlock_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/mul"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd"
  input: "Wavenet/Embed_convolution/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/mul"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_1/add_1"
  input: "Wavenet/ResNet/ResBlock_2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7682
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_2/Pad"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice"
  input: "Upsample/Encode_feature/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_2/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_2/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_2/Tanh"
  input: "Wavenet/ResNet/ResBlock_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/mul"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/mul"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_2/add_1"
  input: "Wavenet/ResNet/ResBlock_3/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7684
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_3/Pad"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice"
  input: "Upsample/Encode_feature/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_3/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_3/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_3/Tanh"
  input: "Wavenet/ResNet/ResBlock_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/mul"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/mul"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_1"
  op: "Add"
  input: "Wavenet/ResNet/add"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_3/add_1"
  input: "Wavenet/ResNet/ResBlock_4/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7688
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_4/Pad"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice"
  input: "Upsample/Encode_feature/conv1d_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_4/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_4/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_4/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_4/Tanh"
  input: "Wavenet/ResNet/ResBlock_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/mul"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/mul"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_2"
  op: "Add"
  input: "Wavenet/ResNet/add_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_4/add_1"
  input: "Wavenet/ResNet/ResBlock_5/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7696
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_5/Pad"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice"
  input: "Upsample/Encode_feature/conv1d_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_5/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_5/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_5/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_5/Tanh"
  input: "Wavenet/ResNet/ResBlock_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/mul"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/mul"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_3"
  op: "Add"
  input: "Wavenet/ResNet/add_2"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000 \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_5/add_1"
  input: "Wavenet/ResNet/ResBlock_6/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7712
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_6/Pad"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice"
  input: "Upsample/Encode_feature/conv1d_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_6/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_6/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_6/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_6/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_6/Tanh"
  input: "Wavenet/ResNet/ResBlock_6/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/mul"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/mul"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_4"
  op: "Add"
  input: "Wavenet/ResNet/add_3"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_6/add_1"
  input: "Wavenet/ResNet/ResBlock_7/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7744
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_7/Pad"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice"
  input: "Upsample/Encode_feature/conv1d_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_7/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_7/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_7/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_7/Tanh"
  input: "Wavenet/ResNet/ResBlock_7/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/mul"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/mul"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_5"
  op: "Add"
  input: "Wavenet/ResNet/add_4"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_7/add_1"
  input: "Wavenet/ResNet/ResBlock_8/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7808
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_8/Pad"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice"
  input: "Upsample/Encode_feature/conv1d_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_8/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_8/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_8/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_8/Tanh"
  input: "Wavenet/ResNet/ResBlock_8/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/mul"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/mul"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_6"
  op: "Add"
  input: "Wavenet/ResNet/add_5"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_8/add_1"
  input: "Wavenet/ResNet/ResBlock_9/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7936
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_9/Pad"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice"
  input: "Upsample/Encode_feature/conv1d_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_9/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_9/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_9/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_9/Tanh"
  input: "Wavenet/ResNet/ResBlock_9/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/mul"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/mul"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_7"
  op: "Add"
  input: "Wavenet/ResNet/add_6"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_9/add_1"
  input: "Wavenet/ResNet/ResBlock_10/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8192
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_10/Pad"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice"
  input: "Upsample/Encode_feature/conv1d_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_10/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_10/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_10/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_10/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_10/Tanh"
  input: "Wavenet/ResNet/ResBlock_10/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/mul"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/mul"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_8"
  op: "Add"
  input: "Wavenet/ResNet/add_7"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_10/add_1"
  input: "Wavenet/ResNet/ResBlock_11/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/Pad"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice"
  input: "Upsample/Encode_feature/conv1d_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_11/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_11/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_11/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_11/Tanh"
  input: "Wavenet/ResNet/ResBlock_11/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/mul"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/mul"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_9"
  op: "Add"
  input: "Wavenet/ResNet/add_8"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_11/add_1"
  input: "Wavenet/ResNet/ResBlock_12/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7682
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_12/Pad"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice"
  input: "Upsample/Encode_feature/conv1d_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_12/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_12/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_12/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_12/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_12/Tanh"
  input: "Wavenet/ResNet/ResBlock_12/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/mul"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/mul"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_10"
  op: "Add"
  input: "Wavenet/ResNet/add_9"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_12/add_1"
  input: "Wavenet/ResNet/ResBlock_13/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7684
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_13/Pad"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice"
  input: "Upsample/Encode_feature/conv1d_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_13/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_13/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_13/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_13/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_13/Tanh"
  input: "Wavenet/ResNet/ResBlock_13/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/mul"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/mul"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_11"
  op: "Add"
  input: "Wavenet/ResNet/add_10"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_13/add_1"
  input: "Wavenet/ResNet/ResBlock_14/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7688
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_14/Pad"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice"
  input: "Upsample/Encode_feature/conv1d_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_14/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_14/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_14/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_14/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_14/Tanh"
  input: "Wavenet/ResNet/ResBlock_14/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/mul"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_13/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/mul"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_12"
  op: "Add"
  input: "Wavenet/ResNet/add_11"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_14/add_1"
  input: "Wavenet/ResNet/ResBlock_15/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7696
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_15/Pad"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice"
  input: "Upsample/Encode_feature/conv1d_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_15/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_15/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_15/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_15/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_15/Tanh"
  input: "Wavenet/ResNet/ResBlock_15/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/mul"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_14/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/mul"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_13"
  op: "Add"
  input: "Wavenet/ResNet/add_12"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000 \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_15/add_1"
  input: "Wavenet/ResNet/ResBlock_16/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7712
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_16/Pad"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice"
  input: "Upsample/Encode_feature/conv1d_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_16/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_16/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_16/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_16/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_16/Tanh"
  input: "Wavenet/ResNet/ResBlock_16/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/mul"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_15/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/mul"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_14"
  op: "Add"
  input: "Wavenet/ResNet/add_13"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_16/add_1"
  input: "Wavenet/ResNet/ResBlock_17/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7744
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_17/Pad"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice"
  input: "Upsample/Encode_feature/conv1d_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_17/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_17/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_17/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_17/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_17/Tanh"
  input: "Wavenet/ResNet/ResBlock_17/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/mul"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_16/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/mul"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_15"
  op: "Add"
  input: "Wavenet/ResNet/add_14"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_17/add_1"
  input: "Wavenet/ResNet/ResBlock_18/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7808
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_18/Pad"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice"
  input: "Upsample/Encode_feature/conv1d_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_18/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_18/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_18/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_18/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_18/Tanh"
  input: "Wavenet/ResNet/ResBlock_18/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/mul"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_17/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/mul"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_16"
  op: "Add"
  input: "Wavenet/ResNet/add_15"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_18/add_1"
  input: "Wavenet/ResNet/ResBlock_19/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7936
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_19/Pad"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice"
  input: "Upsample/Encode_feature/conv1d_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_19/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_19/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_19/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_19/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_19/Tanh"
  input: "Wavenet/ResNet/ResBlock_19/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/mul"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_18/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/mul"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_17"
  op: "Add"
  input: "Wavenet/ResNet/add_16"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/Pad"
  op: "Pad"
  input: "Wavenet/ResNet/ResBlock_19/add_1"
  input: "Wavenet/ResNet/ResBlock_20/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8192
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/required_space_to_batch_paddings/base_paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_20/Pad"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/read"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7680
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_2/values_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_2"
  op: "Pack"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_2/values_0"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_2/values_1"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_2/values_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/strided_slice"
  op: "StridedSlice"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/add"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice"
  input: "Upsample/Encode_feature/conv1d_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/split"
  op: "Split"
  input: "Wavenet/ResNet/ResBlock_20/split/split_dim"
  input: "Wavenet/ResNet/ResBlock_20/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/Tanh"
  op: "Tanh"
  input: "Wavenet/ResNet/ResBlock_20/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/Sigmoid"
  op: "Sigmoid"
  input: "Wavenet/ResNet/ResBlock_20/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_20/Tanh"
  input: "Wavenet/ResNet/ResBlock_20/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/mul"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel/read"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/add_1"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/BiasAdd"
  input: "Wavenet/ResNet/ResBlock_19/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/max"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/mul"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/read"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Squeeze"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Wavenet/ResNet/add_18"
  op: "Add"
  input: "Wavenet/ResNet/add_17"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/ResNet/Relu"
  op: "Relu"
  input: "Wavenet/ResNet/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/max"
  input: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Assign"
  op: "Assign"
  input: "Wavenet/Projection/conv1d/kernel"
  input: "Wavenet/Projection/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/read"
  op: "Identity"
  input: "Wavenet/Projection/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/ResNet/Relu"
  input: "Wavenet/Projection/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/Projection/conv1d/kernel/read"
  input: "Wavenet/Projection/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/Projection/conv1d/conv1d/ExpandDims"
  input: "Wavenet/Projection/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/Projection/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/Projection/Relu"
  op: "Relu"
  input: "Wavenet/Projection/conv1d/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/kernel"
  input: "Wavenet/Projection/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/read"
  op: "Identity"
  input: "Wavenet/Projection/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Assign"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/bias"
  input: "Wavenet/Projection/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/read"
  op: "Identity"
  input: "Wavenet/Projection/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "Wavenet/Projection/Relu"
  input: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "Wavenet/Projection/conv1d_1/kernel/read"
  input: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/conv1d/Conv2D"
  op: "Conv2D"
  input: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "Wavenet/Projection/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "Wavenet/Projection/conv1d_1/conv1d/Squeeze"
  input: "Wavenet/Projection/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/labels_stop_gradient"
  op: "StopGradient"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "Wavenet/Projection/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_1"
  op: "Shape"
  input: "Wavenet/Projection/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_1"
  input: "softmax_cross_entropy_loss/xentropy/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_1"
  input: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice"
  input: "softmax_cross_entropy_loss/xentropy/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape"
  op: "Reshape"
  input: "Wavenet/Projection/conv1d_1/BiasAdd"
  input: "softmax_cross_entropy_loss/xentropy/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_2"
  op: "Shape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_2"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_2"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  input: "softmax_cross_entropy_loss/xentropy/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "softmax_cross_entropy_loss/ToFloat/x"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "softmax_cross_entropy_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Mul"
  input: "softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/ToFloat/x"
  input: "softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/num_present/Equal"
  input: "softmax_cross_entropy_loss/num_present/zeros_like"
  input: "softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "softmax_cross_entropy_loss/num_present/Select"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Sum"
  input: "softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/ones_like/Shape"
  input: "softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Equal"
  input: "softmax_cross_entropy_loss/ones_like"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/zeros_like"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/value"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "softmax_cross_entropy_loss/div"
  input: "softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/Fill"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "softmax_cross_entropy_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  op: "Shape"
  input: "Wavenet/Projection/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  input: "^gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/Projection/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/Projection/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/Projection/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/Projection/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/Projection/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/Projection/Relu_grad/ReluGrad"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/Projection/conv1d/conv1d/ExpandDims"
  input: "Wavenet/Projection/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/Projection/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/Projection/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Projection/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_18_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/Relu_grad/ReluGrad"
  input: "gradients/Wavenet/ResNet/add_18_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_18_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_18_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/Relu_grad/ReluGrad"
  input: "gradients/Wavenet/ResNet/add_18_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_18_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_18_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_18_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_18_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_18_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_18_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_18_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_17_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_18_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_17_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_18_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_17_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_17_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_17_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_17_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_17_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_17_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_17_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_18_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_18_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_18_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_18_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_16_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_17_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_16_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_17_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_16_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_16_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_16_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_16_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_16_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_16_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_16_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_17_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_17_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_17_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_17_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_15_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_16_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_15_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_15_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_16_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_15_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_15_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_15_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_15_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_15_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_15_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_15_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_15_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_16_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_16_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_16_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_16_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_14_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_15_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_14_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_15_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_14_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_14_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_14_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_14_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_14_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_14_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_14_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_15_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_15_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_15_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_13_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_14_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_13_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_14_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_13_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_13_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_13_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_13_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_13_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_13_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_13_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_14_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_14_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_14_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_14_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_20/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_20/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Mul"
  op: "Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_20/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_20/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_12_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_13_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_12_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_13_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_12_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_12_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_12_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_12_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_12_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_12_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_12_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_13_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_13_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_13_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_13_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_20/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_20/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_20/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_11_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_12_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_11_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_11_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_12_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_11_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_11_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_11_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_11_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_11_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_11_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_11_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_11_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_12_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_12_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_12_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_12_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_20/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_10_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_11_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_10_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_11_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_10_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_10_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_10_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_10_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_10_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_10_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_10_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_11_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_11_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_11_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_11_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_20/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_20/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_9_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_10_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_9_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_10_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_9_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_9_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_9_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_9_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_9_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_9_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_9_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_10_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_10_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_10_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_10_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_20/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_20/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_8_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_9_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_8_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_9_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_8_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_8_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_8_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_8_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_8_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_8_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_8_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_9_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_9_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_9_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_20/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_7_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_8_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_7_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_8_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_7_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_7_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_7_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_7_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_7_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_8_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_8_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_8_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_6_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_7_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_6_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_7_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_6_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_6_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_6_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_6_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_6_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_7_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_7_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_5_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_6_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_5_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_6_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_5_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_5_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_5_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_5_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_5_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_6_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_6_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_4_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_5_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_4_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_5_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_4_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_4_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_4_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_4_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_4_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_5_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_5_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_3_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_4_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_3_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_4_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_3_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_3_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_3_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_3_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_3_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_4_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_4_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_2_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_3_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_2_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_3_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_2_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_2_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_2_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_2_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_2_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_3_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_3_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_20/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_2_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_2_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_2_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_2_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Slice_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_20/Pad_grad/Slice_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_1_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/add_1_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_1_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_grad/tuple/control_dependency"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/add_grad/tuple/control_dependency_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN"
  input: "Wavenet/ResNet/ResBlock_19/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_19/Tanh"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_19/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_19/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_19/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_19/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_19/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_19/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_19/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_19/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_19/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_19/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_19/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_19/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_2"
  input: "Wavenet/ResNet/ResBlock_18/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_18/Tanh"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_18/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_18/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_18/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_18/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_18/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_18/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_18/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_18/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_18/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_18/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_18/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_18/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_3"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_4"
  input: "Wavenet/ResNet/ResBlock_17/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_17/Tanh"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_17/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_17/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_17/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_17/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_17/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_17/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_17/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_17/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_17/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_17/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_17/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_17/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "Wavenet/ResNet/ResBlock_16/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_16/Tanh"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_16/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_16/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_16/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_16/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_16/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_16/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_16/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_16/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_16/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_16/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_16/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_16/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "Wavenet/ResNet/ResBlock_15/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_15/Tanh"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_15/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_15/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_15/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_15/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_15/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_15/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_15/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_15/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_15/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_15/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_15/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_15/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_10"
  input: "Wavenet/ResNet/ResBlock_14/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_14/Tanh"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_14/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_14/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_14/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_14/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_14/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_14/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_14/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_14/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_14/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_14/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_14/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_14/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_12"
  input: "Wavenet/ResNet/ResBlock_13/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_13/Tanh"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_13/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_13/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_13/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_13/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_13/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_13/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_13/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_13/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_13/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_13/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_13/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_13/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_13"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_13"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "Wavenet/ResNet/ResBlock_12/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_12/Tanh"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_12/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_12/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_12/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_12/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_12/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_12/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_12/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_12/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_12/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_12/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_12/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_12/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_15"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_15"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_16"
  input: "Wavenet/ResNet/ResBlock_11/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_11/Tanh"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_11/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_11/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_11/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_11/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_11/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_11/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_11/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_11/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_11/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_11/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_11/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_11/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_11/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_17"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_17"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_18"
  input: "Wavenet/ResNet/ResBlock_10/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_10/Tanh"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_10/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_10/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_10/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_10/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_10/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_10/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_10/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_10/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_10/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_10/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_10/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_10/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_19"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_19"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "Wavenet/ResNet/ResBlock_9/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_9/Tanh"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_9/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_9/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_9/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_9/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_9/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_9/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_9/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_9/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_9/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_9/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_9/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_9/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_21"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_21"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_22"
  input: "Wavenet/ResNet/ResBlock_8/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_8/Tanh"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_8/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_8/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_8/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_8/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_8/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_8/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_8/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_8/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_8/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_8/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_8/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_8/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_23"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_23"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_24"
  input: "Wavenet/ResNet/ResBlock_7/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_7/Tanh"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_7/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_7/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_7/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_7/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_7/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_7/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_7/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_7/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_7/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_7/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_7/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_7/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_25"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_25"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_26"
  input: "Wavenet/ResNet/ResBlock_6/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_6/Tanh"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_6/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_6/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_6/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_6/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_6/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_6/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_6/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_6/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_6/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_6/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_6/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_6/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_27"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_27"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_28"
  input: "Wavenet/ResNet/ResBlock_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_5/Tanh"
  input: "gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_5/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_5/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_5/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_5/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_5/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_5/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_5/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_5/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_5/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_5/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_5/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_5/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_29"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_29"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_30"
  input: "Wavenet/ResNet/ResBlock_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_4/Tanh"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_4/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_4/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_4/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_4/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_4/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_4/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_4/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_4/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_4/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_4/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_4/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_4/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_31"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_31"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_32"
  input: "Wavenet/ResNet/ResBlock_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_3/Tanh"
  input: "gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_3/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_3/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_3/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_3/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_3/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_3/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_3/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_3/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_3/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_3/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_3/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_33"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_33"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_34"
  input: "Wavenet/ResNet/ResBlock_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_2/Tanh"
  input: "gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_2/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_2/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_2/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_2/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_2/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_2/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_2/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_2/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND/block_shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/BatchToSpaceND_grad/SpaceToBatchND"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND/block_shape"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_2/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_2/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/Embed_convolution/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_35"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_35"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/tuple/control_dependency"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Shape_1"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_36"
  input: "Wavenet/ResNet/ResBlock_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Mul"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Mul_1"
  op: "Mul"
  input: "Wavenet/ResNet/ResBlock_1/Tanh"
  input: "gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Mul_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/ResNet/ResBlock_1/Tanh"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_1/Sigmoid"
  input: "gradients/Wavenet/ResNet/ResBlock_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Sigmoid_grad/SigmoidGrad"
  input: "Wavenet/ResNet/ResBlock_1/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Shape_1"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Shape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_1/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Wavenet/ResNet/ResBlock_1/split_grad/concat"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Sum_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_grad/Reshape_1"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Reshape"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/Reshape_1"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/strided_slice_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_1/strided_slice_grad/Shape"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice/stack"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_2"
  input: "Wavenet/ResNet/ResBlock_1/strided_slice/stack_3"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_grad/tuple/control_dependency_1"
  input: "^gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Wavenet/ResNet/ResBlock_1/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/strided_slice_grad/StridedSliceGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Encode_feature/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims"
  input: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Upsample/Encode_feature/conv1d/conv1d/ExpandDims"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Wavenet/ResNet/ResBlock_1/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 20
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "Upsample/Deconvolution/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_37"
  input: "gradients/Upsample/Deconvolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Rank"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Slice"
  op: "Slice"
  input: "Wavenet/ResNet/ResBlock_1/Pad/paddings"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Slice/begin"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Shape"
  op: "Shape"
  input: "Wavenet/Embed_convolution/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Reshape"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Upsample/Deconvolution/Squeeze_grad/Reshape"
  input: "Upsample/Deconvolution/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/ResNet/ResBlock_1/Pad_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/ResNet/ResBlock_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Wavenet/Embed_convolution/Tanh"
  input: "gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Upsample/Deconvolution/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Deconvolution/Relu_1_grad/ReluGrad"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Deconvolution/Relu_1_grad/ReluGrad"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Deconvolution/Relu_1_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/Embed_convolution/Tanh_grad/TanhGrad"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Shape"
  input: "Upsample/Deconvolution/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 16
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/tuple/control_dependency"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 16
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Conv2D"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Conv2D"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/Conv2D"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/ShapeN"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/ShapeN:1"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "Upsample/Deconvolution/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Upsample/Deconvolution/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Deconvolution/Relu_grad/ReluGrad"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Deconvolution/Relu_grad/ReluGrad"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Deconvolution/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Shape"
  input: "Upsample/Deconvolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 16
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 16
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/Conv2D"
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/bias/Adam"
  input: "Upsample/Encode_feature/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_3/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_4/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_5/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_6/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_7/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_8/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_9/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_10/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_11/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_12/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_13/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_14/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_15/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_16/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_17/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_18/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Adam/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Adam/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Adam_1/Assign"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Upsample/Encode_feature/conv1d_19/bias/Adam_1/read"
  op: "Identity"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/Projection/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/Projection/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/Projection/conv1d/kernel/Adam"
  input: "Wavenet/Projection/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/Projection/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/Projection/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/Projection/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/Projection/conv1d/kernel/Adam_1"
  input: "Wavenet/Projection/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/Projection/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam/read"
  op: "Identity"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam_1"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Adam/Assign"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/bias/Adam"
  input: "Wavenet/Projection/conv1d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Adam/read"
  op: "Identity"
  input: "Wavenet/Projection/conv1d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/bias/Adam_1"
  input: "Wavenet/Projection/conv1d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Wavenet/Projection/conv1d_1/bias/Adam_1/read"
  op: "Identity"
  input: "Wavenet/Projection/conv1d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_Upsample/Deconvolution/conv2d_transpose/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Deconvolution/conv2d_transpose/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Deconvolution/conv2d_transpose/bias"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Deconvolution/conv2d_transpose_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose_1/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Deconvolution/conv2d_transpose_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Deconvolution/conv2d_transpose_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d/kernel"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d/bias"
  input: "Upsample/Encode_feature/conv1d/bias/Adam"
  input: "Upsample/Encode_feature/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_1/kernel"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_1/bias"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_2/kernel"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_2/bias"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_3/kernel"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_3/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_3/bias"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_4/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_4/kernel"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_4/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_4/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_4/bias"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_5/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_5/kernel"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_5/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_5/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_5/bias"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_5/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_6/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_6/kernel"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_6/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_6/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_6/bias"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_6/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_7/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_7/kernel"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_7/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_7/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_7/bias"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_8/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_8/kernel"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_8/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_8/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_8/bias"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_8/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_9/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_9/kernel"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_9/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_9/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_9/bias"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_9/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_10/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_10/kernel"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_10/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_10/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_10/bias"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_10/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_11/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_11/kernel"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_11/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_11/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_11/bias"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_11/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_12/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_12/kernel"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_12/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_12/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_12/bias"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_12/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_13/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_13/kernel"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_13/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_13/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_13/bias"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_13/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_14/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_14/kernel"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_14/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_14/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_14/bias"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_14/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_15/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_15/kernel"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_15/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_15/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_15/bias"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_15/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_16/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_16/kernel"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_16/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_16/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_16/bias"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_16/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_17/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_17/kernel"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_17/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_17/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_17/bias"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_17/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_18/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_18/kernel"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_18/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_18/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_18/bias"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_18/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_19/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_19/kernel"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_19/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Upsample/Encode_feature/conv1d_19/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Upsample/Encode_feature/conv1d_19/bias"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Upsample/Encode_feature/conv1d_19/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/Embed_convolution/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/Embed_convolution/conv1d/kernel"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/Embed_convolution/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_1/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_1/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_1/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_2/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_2/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_2/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_3/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_3/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_3/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_4/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_4/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_4/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_5/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_5/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_5/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_6/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_6/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_6/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_7/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_7/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_7/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_8/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_8/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_8/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_9/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_9/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_9/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_10/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_10/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_10/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_11/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_11/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_11/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_12/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_12/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_12/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_13/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_13/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_13/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_14/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_14/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_14/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_15/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_15/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_15/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_16/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_16/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_16/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_17/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_17/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_17/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_18/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_18/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_18/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_19/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_19/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_19/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_20/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_20/conv1d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/ResNet/ResBlock_20/conv1d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/ResNet/ResBlock_20/conv1d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/Projection/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/Projection/conv1d/kernel"
  input: "Wavenet/Projection/conv1d/kernel/Adam"
  input: "Wavenet/Projection/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/Projection/conv1d/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/Projection/conv1d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/Projection/conv1d_1/kernel"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/Projection/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Wavenet/Projection/conv1d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Wavenet/Projection/conv1d_1/bias"
  input: "Wavenet/Projection/conv1d_1/bias/Adam"
  input: "Wavenet/Projection/conv1d_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Wavenet/Projection/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose_1/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose_1/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_10/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_10/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_11/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_11/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_12/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_12/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_13/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_13/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_14/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_14/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_15/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_15/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_16/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_16/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_17/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_17/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_18/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_18/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_19/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_19/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_3/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_3/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_4/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_4/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_5/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_5/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_6/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_6/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_7/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_7/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_8/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_8/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_9/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_9/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/Embed_convolution/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/Projection/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/Projection/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/Projection/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose_1/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose_1/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_10/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_10/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_11/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_11/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_12/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_12/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_13/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_13/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_14/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_14/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_15/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_15/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_16/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_16/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_17/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_17/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_18/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_18/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_19/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_19/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_3/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_3/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_4/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_4/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_5/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_5/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_6/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_6/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_7/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_7/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_8/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_8/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_9/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_9/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/Embed_convolution/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/Projection/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/Projection/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/Projection/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose_1/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Deconvolution/conv2d_transpose_1/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_10/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_10/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_11/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_11/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_12/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_12/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_13/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_13/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_14/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_14/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_15/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_15/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_16/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_16/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_17/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_17/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_18/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_18/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_19/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_19/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_3/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_3/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_4/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_4/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_5/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_5/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_6/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_6/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_7/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_7/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_8/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_8/kernel/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_9/bias/ApplyAdam"
  input: "^Adam/update_Upsample/Encode_feature/conv1d_9/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/Embed_convolution/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/Projection/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/Projection/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/Projection/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_1/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_2/bias/ApplyAdam"
  input: "^Adam/update_Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/ApplyAdam"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 502
          }
        }
        string_val: "Upsample/Deconvolution/conv2d_transpose/bias"
        string_val: "Upsample/Deconvolution/conv2d_transpose/bias/Adam"
        string_val: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1"
        string_val: "Upsample/Deconvolution/conv2d_transpose/kernel"
        string_val: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam"
        string_val: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/bias"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/kernel"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d/bias"
        string_val: "Upsample/Encode_feature/conv1d/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d/kernel"
        string_val: "Upsample/Encode_feature/conv1d/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_1/bias"
        string_val: "Upsample/Encode_feature/conv1d_1/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_1/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_1/kernel"
        string_val: "Upsample/Encode_feature/conv1d_1/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_10/bias"
        string_val: "Upsample/Encode_feature/conv1d_10/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_10/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_10/kernel"
        string_val: "Upsample/Encode_feature/conv1d_10/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_11/bias"
        string_val: "Upsample/Encode_feature/conv1d_11/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_11/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_11/kernel"
        string_val: "Upsample/Encode_feature/conv1d_11/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_12/bias"
        string_val: "Upsample/Encode_feature/conv1d_12/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_12/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_12/kernel"
        string_val: "Upsample/Encode_feature/conv1d_12/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_13/bias"
        string_val: "Upsample/Encode_feature/conv1d_13/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_13/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_13/kernel"
        string_val: "Upsample/Encode_feature/conv1d_13/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_14/bias"
        string_val: "Upsample/Encode_feature/conv1d_14/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_14/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_14/kernel"
        string_val: "Upsample/Encode_feature/conv1d_14/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_15/bias"
        string_val: "Upsample/Encode_feature/conv1d_15/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_15/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_15/kernel"
        string_val: "Upsample/Encode_feature/conv1d_15/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_16/bias"
        string_val: "Upsample/Encode_feature/conv1d_16/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_16/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_16/kernel"
        string_val: "Upsample/Encode_feature/conv1d_16/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_17/bias"
        string_val: "Upsample/Encode_feature/conv1d_17/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_17/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_17/kernel"
        string_val: "Upsample/Encode_feature/conv1d_17/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_18/bias"
        string_val: "Upsample/Encode_feature/conv1d_18/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_18/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_18/kernel"
        string_val: "Upsample/Encode_feature/conv1d_18/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_19/bias"
        string_val: "Upsample/Encode_feature/conv1d_19/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_19/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_19/kernel"
        string_val: "Upsample/Encode_feature/conv1d_19/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_2/bias"
        string_val: "Upsample/Encode_feature/conv1d_2/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_2/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_2/kernel"
        string_val: "Upsample/Encode_feature/conv1d_2/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_3/bias"
        string_val: "Upsample/Encode_feature/conv1d_3/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_3/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_3/kernel"
        string_val: "Upsample/Encode_feature/conv1d_3/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_4/bias"
        string_val: "Upsample/Encode_feature/conv1d_4/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_4/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_4/kernel"
        string_val: "Upsample/Encode_feature/conv1d_4/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_5/bias"
        string_val: "Upsample/Encode_feature/conv1d_5/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_5/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_5/kernel"
        string_val: "Upsample/Encode_feature/conv1d_5/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_6/bias"
        string_val: "Upsample/Encode_feature/conv1d_6/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_6/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_6/kernel"
        string_val: "Upsample/Encode_feature/conv1d_6/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_7/bias"
        string_val: "Upsample/Encode_feature/conv1d_7/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_7/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_7/kernel"
        string_val: "Upsample/Encode_feature/conv1d_7/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_8/bias"
        string_val: "Upsample/Encode_feature/conv1d_8/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_8/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_8/kernel"
        string_val: "Upsample/Encode_feature/conv1d_8/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_9/bias"
        string_val: "Upsample/Encode_feature/conv1d_9/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_9/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_9/kernel"
        string_val: "Upsample/Encode_feature/conv1d_9/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1"
        string_val: "Wavenet/Embed_convolution/conv1d/kernel"
        string_val: "Wavenet/Embed_convolution/conv1d/kernel/Adam"
        string_val: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1"
        string_val: "Wavenet/Projection/conv1d/kernel"
        string_val: "Wavenet/Projection/conv1d/kernel/Adam"
        string_val: "Wavenet/Projection/conv1d/kernel/Adam_1"
        string_val: "Wavenet/Projection/conv1d_1/bias"
        string_val: "Wavenet/Projection/conv1d_1/bias/Adam"
        string_val: "Wavenet/Projection/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/Projection/conv1d_1/kernel"
        string_val: "Wavenet/Projection/conv1d_1/kernel/Adam"
        string_val: "Wavenet/Projection/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 502
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Upsample/Deconvolution/conv2d_transpose/bias"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d/bias"
  input: "Upsample/Encode_feature/conv1d/bias/Adam"
  input: "Upsample/Encode_feature/conv1d/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d/kernel"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_1/bias"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_1/kernel"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_10/bias"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_10/kernel"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_11/bias"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_11/kernel"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_12/bias"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_12/kernel"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_13/bias"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_13/kernel"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_14/bias"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_14/kernel"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_15/bias"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_15/kernel"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_16/bias"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_16/kernel"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_17/bias"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_17/kernel"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_18/bias"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_18/kernel"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_19/bias"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_19/kernel"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_2/bias"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_2/kernel"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_3/bias"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_3/kernel"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_4/bias"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_4/kernel"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_5/bias"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_5/kernel"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_6/bias"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_6/kernel"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_7/bias"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_7/kernel"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_8/bias"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_8/kernel"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1"
  input: "Upsample/Encode_feature/conv1d_9/bias"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam_1"
  input: "Upsample/Encode_feature/conv1d_9/kernel"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1"
  input: "Wavenet/Embed_convolution/conv1d/kernel"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1"
  input: "Wavenet/Projection/conv1d/kernel"
  input: "Wavenet/Projection/conv1d/kernel/Adam"
  input: "Wavenet/Projection/conv1d/kernel/Adam_1"
  input: "Wavenet/Projection/conv1d_1/bias"
  input: "Wavenet/Projection/conv1d_1/bias/Adam"
  input: "Wavenet/Projection/conv1d_1/bias/Adam_1"
  input: "Wavenet/Projection/conv1d_1/kernel"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1"
  input: "beta1_power"
  input: "beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 502
          }
        }
        string_val: "Upsample/Deconvolution/conv2d_transpose/bias"
        string_val: "Upsample/Deconvolution/conv2d_transpose/bias/Adam"
        string_val: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1"
        string_val: "Upsample/Deconvolution/conv2d_transpose/kernel"
        string_val: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam"
        string_val: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/bias"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/kernel"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam"
        string_val: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d/bias"
        string_val: "Upsample/Encode_feature/conv1d/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d/kernel"
        string_val: "Upsample/Encode_feature/conv1d/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_1/bias"
        string_val: "Upsample/Encode_feature/conv1d_1/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_1/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_1/kernel"
        string_val: "Upsample/Encode_feature/conv1d_1/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_10/bias"
        string_val: "Upsample/Encode_feature/conv1d_10/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_10/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_10/kernel"
        string_val: "Upsample/Encode_feature/conv1d_10/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_11/bias"
        string_val: "Upsample/Encode_feature/conv1d_11/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_11/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_11/kernel"
        string_val: "Upsample/Encode_feature/conv1d_11/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_12/bias"
        string_val: "Upsample/Encode_feature/conv1d_12/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_12/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_12/kernel"
        string_val: "Upsample/Encode_feature/conv1d_12/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_13/bias"
        string_val: "Upsample/Encode_feature/conv1d_13/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_13/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_13/kernel"
        string_val: "Upsample/Encode_feature/conv1d_13/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_14/bias"
        string_val: "Upsample/Encode_feature/conv1d_14/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_14/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_14/kernel"
        string_val: "Upsample/Encode_feature/conv1d_14/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_15/bias"
        string_val: "Upsample/Encode_feature/conv1d_15/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_15/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_15/kernel"
        string_val: "Upsample/Encode_feature/conv1d_15/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_16/bias"
        string_val: "Upsample/Encode_feature/conv1d_16/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_16/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_16/kernel"
        string_val: "Upsample/Encode_feature/conv1d_16/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_17/bias"
        string_val: "Upsample/Encode_feature/conv1d_17/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_17/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_17/kernel"
        string_val: "Upsample/Encode_feature/conv1d_17/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_18/bias"
        string_val: "Upsample/Encode_feature/conv1d_18/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_18/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_18/kernel"
        string_val: "Upsample/Encode_feature/conv1d_18/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_19/bias"
        string_val: "Upsample/Encode_feature/conv1d_19/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_19/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_19/kernel"
        string_val: "Upsample/Encode_feature/conv1d_19/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_2/bias"
        string_val: "Upsample/Encode_feature/conv1d_2/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_2/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_2/kernel"
        string_val: "Upsample/Encode_feature/conv1d_2/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_3/bias"
        string_val: "Upsample/Encode_feature/conv1d_3/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_3/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_3/kernel"
        string_val: "Upsample/Encode_feature/conv1d_3/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_4/bias"
        string_val: "Upsample/Encode_feature/conv1d_4/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_4/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_4/kernel"
        string_val: "Upsample/Encode_feature/conv1d_4/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_5/bias"
        string_val: "Upsample/Encode_feature/conv1d_5/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_5/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_5/kernel"
        string_val: "Upsample/Encode_feature/conv1d_5/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_6/bias"
        string_val: "Upsample/Encode_feature/conv1d_6/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_6/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_6/kernel"
        string_val: "Upsample/Encode_feature/conv1d_6/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_7/bias"
        string_val: "Upsample/Encode_feature/conv1d_7/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_7/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_7/kernel"
        string_val: "Upsample/Encode_feature/conv1d_7/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_8/bias"
        string_val: "Upsample/Encode_feature/conv1d_8/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_8/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_8/kernel"
        string_val: "Upsample/Encode_feature/conv1d_8/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_9/bias"
        string_val: "Upsample/Encode_feature/conv1d_9/bias/Adam"
        string_val: "Upsample/Encode_feature/conv1d_9/bias/Adam_1"
        string_val: "Upsample/Encode_feature/conv1d_9/kernel"
        string_val: "Upsample/Encode_feature/conv1d_9/kernel/Adam"
        string_val: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1"
        string_val: "Wavenet/Embed_convolution/conv1d/kernel"
        string_val: "Wavenet/Embed_convolution/conv1d/kernel/Adam"
        string_val: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1"
        string_val: "Wavenet/Projection/conv1d/kernel"
        string_val: "Wavenet/Projection/conv1d/kernel/Adam"
        string_val: "Wavenet/Projection/conv1d/kernel/Adam_1"
        string_val: "Wavenet/Projection/conv1d_1/bias"
        string_val: "Wavenet/Projection/conv1d_1/bias/Adam"
        string_val: "Wavenet/Projection/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/Projection/conv1d_1/kernel"
        string_val: "Wavenet/Projection/conv1d_1/kernel/Adam"
        string_val: "Wavenet/Projection/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/bias"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/kernel"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam"
        string_val: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 502
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/bias"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/bias/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose/kernel/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/bias/Adam_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Upsample/Deconvolution/conv2d_transpose_1/kernel/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/bias"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/bias/Adam"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/bias/Adam_1"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/kernel"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/bias"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/kernel"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/bias"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/bias/Adam_1"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/kernel"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_10/kernel/Adam_1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/bias"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/bias/Adam_1"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/kernel"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_11/kernel/Adam_1"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/bias"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/bias/Adam_1"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/kernel"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_12/kernel/Adam_1"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/bias"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/bias/Adam_1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/kernel"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_13/kernel/Adam_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/bias"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/bias/Adam_1"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/kernel"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_14/kernel/Adam_1"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/bias"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/bias/Adam_1"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/kernel"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_15/kernel/Adam_1"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/bias"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/bias/Adam_1"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/kernel"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_16/kernel/Adam_1"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/bias"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/bias/Adam_1"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/kernel"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_17/kernel/Adam_1"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/bias"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/bias/Adam_1"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/kernel"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_18/kernel/Adam_1"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/bias"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/bias/Adam_1"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/kernel"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_19/kernel/Adam_1"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/bias"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/kernel"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/bias"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/bias/Adam_1"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/kernel"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_3/kernel/Adam_1"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/bias"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/bias/Adam_1"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/kernel"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_4/kernel/Adam_1"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/bias"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/bias/Adam_1"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/kernel"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_5/kernel/Adam_1"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/bias"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/bias/Adam_1"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/kernel"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_6/kernel/Adam_1"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/bias"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/bias/Adam_1"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/kernel"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_7/kernel/Adam_1"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/bias"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/bias/Adam_1"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/kernel"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_8/kernel/Adam_1"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/bias"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/bias/Adam_1"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/kernel"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "Upsample/Encode_feature/conv1d_9/kernel/Adam_1"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Encode_feature/conv1d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "Wavenet/Embed_convolution/conv1d/kernel"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "Wavenet/Embed_convolution/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Embed_convolution/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "Wavenet/Projection/conv1d/kernel"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "Wavenet/Projection/conv1d/kernel/Adam"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "Wavenet/Projection/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/bias"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/bias/Adam"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/kernel"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "Wavenet/Projection/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/Projection/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/bias/Adam_1"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_1/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_1/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/bias/Adam_1"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_10/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_10/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/bias/Adam_1"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_11/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_11/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/bias/Adam_1"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_12/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_12/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/bias/Adam_1"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_13/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_13/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/bias/Adam_1"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_14/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_14/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/bias/Adam_1"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_265"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam"
  input: "save/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_266"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_267"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
  input: "save/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_268"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_269"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_15/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_15/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_270"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias"
  input: "save/RestoreV2:270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_271"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam"
  input: "save/RestoreV2:271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_272"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/bias/Adam_1"
  input: "save/RestoreV2:272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_273"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel"
  input: "save/RestoreV2:273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_274"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam"
  input: "save/RestoreV2:274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_275"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_276"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
  input: "save/RestoreV2:276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_277"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam"
  input: "save/RestoreV2:277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_278"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_279"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
  input: "save/RestoreV2:279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_280"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_281"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_282"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
  input: "save/RestoreV2:282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_283"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam"
  input: "save/RestoreV2:283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_284"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_285"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
  input: "save/RestoreV2:285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_286"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_287"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_16/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_16/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_288"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias"
  input: "save/RestoreV2:288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_289"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam"
  input: "save/RestoreV2:289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_290"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/bias/Adam_1"
  input: "save/RestoreV2:290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_291"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel"
  input: "save/RestoreV2:291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_292"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam"
  input: "save/RestoreV2:292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_293"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_294"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
  input: "save/RestoreV2:294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_295"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam"
  input: "save/RestoreV2:295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_296"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_297"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
  input: "save/RestoreV2:297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_298"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_299"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_300"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
  input: "save/RestoreV2:300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_301"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam"
  input: "save/RestoreV2:301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_302"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_303"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
  input: "save/RestoreV2:303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_304"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_305"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_17/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_17/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_306"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias"
  input: "save/RestoreV2:306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_307"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam"
  input: "save/RestoreV2:307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_308"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/bias/Adam_1"
  input: "save/RestoreV2:308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_309"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel"
  input: "save/RestoreV2:309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_310"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam"
  input: "save/RestoreV2:310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_311"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_312"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
  input: "save/RestoreV2:312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_313"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam"
  input: "save/RestoreV2:313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_314"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_315"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
  input: "save/RestoreV2:315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_316"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_317"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_318"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
  input: "save/RestoreV2:318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_319"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam"
  input: "save/RestoreV2:319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_320"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_321"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
  input: "save/RestoreV2:321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_322"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_323"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_18/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_18/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_324"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias"
  input: "save/RestoreV2:324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_325"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam"
  input: "save/RestoreV2:325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_326"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/bias/Adam_1"
  input: "save/RestoreV2:326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_327"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel"
  input: "save/RestoreV2:327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_328"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam"
  input: "save/RestoreV2:328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_329"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_330"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
  input: "save/RestoreV2:330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_331"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam"
  input: "save/RestoreV2:331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_332"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_333"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
  input: "save/RestoreV2:333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_334"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_335"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_336"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
  input: "save/RestoreV2:336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_337"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam"
  input: "save/RestoreV2:337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_338"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_339"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
  input: "save/RestoreV2:339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_340"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_341"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_19/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_19/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_342"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias"
  input: "save/RestoreV2:342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_343"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam"
  input: "save/RestoreV2:343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_344"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/bias/Adam_1"
  input: "save/RestoreV2:344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_345"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel"
  input: "save/RestoreV2:345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_346"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam"
  input: "save/RestoreV2:346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_347"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_348"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
  input: "save/RestoreV2:348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_349"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam"
  input: "save/RestoreV2:349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_350"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_351"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
  input: "save/RestoreV2:351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_352"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_353"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_354"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
  input: "save/RestoreV2:354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_355"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam"
  input: "save/RestoreV2:355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_356"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_357"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
  input: "save/RestoreV2:357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_358"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_359"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_2/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_2/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_360"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias"
  input: "save/RestoreV2:360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_361"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam"
  input: "save/RestoreV2:361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_362"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/bias/Adam_1"
  input: "save/RestoreV2:362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_363"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel"
  input: "save/RestoreV2:363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_364"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam"
  input: "save/RestoreV2:364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_365"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_366"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
  input: "save/RestoreV2:366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_367"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
  input: "save/RestoreV2:367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_368"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
  input: "save/RestoreV2:368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_369"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam"
  input: "save/RestoreV2:369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_370"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_371"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
  input: "save/RestoreV2:371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_372"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_373"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_20/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_20/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_374"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias"
  input: "save/RestoreV2:374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_375"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam"
  input: "save/RestoreV2:375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_376"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/bias/Adam_1"
  input: "save/RestoreV2:376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_377"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel"
  input: "save/RestoreV2:377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_378"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam"
  input: "save/RestoreV2:378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_379"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_380"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
  input: "save/RestoreV2:380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_381"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam"
  input: "save/RestoreV2:381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_382"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_383"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
  input: "save/RestoreV2:383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_384"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:384"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_385"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:385"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_386"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
  input: "save/RestoreV2:386"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_387"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam"
  input: "save/RestoreV2:387"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_388"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:388"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_389"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
  input: "save/RestoreV2:389"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_390"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:390"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_391"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_3/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:391"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_3/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_392"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias"
  input: "save/RestoreV2:392"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_393"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam"
  input: "save/RestoreV2:393"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_394"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/bias/Adam_1"
  input: "save/RestoreV2:394"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_395"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel"
  input: "save/RestoreV2:395"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_396"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam"
  input: "save/RestoreV2:396"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_397"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:397"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_398"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
  input: "save/RestoreV2:398"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_399"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam"
  input: "save/RestoreV2:399"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_400"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:400"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_401"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
  input: "save/RestoreV2:401"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_402"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:402"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_403"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:403"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_404"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
  input: "save/RestoreV2:404"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_405"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam"
  input: "save/RestoreV2:405"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_406"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:406"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_407"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
  input: "save/RestoreV2:407"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_408"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:408"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_409"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_4/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:409"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_4/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_410"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias"
  input: "save/RestoreV2:410"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_411"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam"
  input: "save/RestoreV2:411"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_412"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/bias/Adam_1"
  input: "save/RestoreV2:412"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_413"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel"
  input: "save/RestoreV2:413"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_414"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam"
  input: "save/RestoreV2:414"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_415"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:415"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_416"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
  input: "save/RestoreV2:416"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_417"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam"
  input: "save/RestoreV2:417"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_418"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:418"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_419"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
  input: "save/RestoreV2:419"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_420"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:420"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_421"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:421"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_422"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
  input: "save/RestoreV2:422"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_423"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam"
  input: "save/RestoreV2:423"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_424"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:424"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_425"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
  input: "save/RestoreV2:425"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_426"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:426"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_427"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_5/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:427"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_5/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_428"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias"
  input: "save/RestoreV2:428"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_429"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam"
  input: "save/RestoreV2:429"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_430"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/bias/Adam_1"
  input: "save/RestoreV2:430"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_431"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel"
  input: "save/RestoreV2:431"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_432"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam"
  input: "save/RestoreV2:432"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_433"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:433"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_434"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
  input: "save/RestoreV2:434"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_435"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam"
  input: "save/RestoreV2:435"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_436"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:436"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_437"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
  input: "save/RestoreV2:437"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_438"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:438"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_439"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:439"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_440"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
  input: "save/RestoreV2:440"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_441"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam"
  input: "save/RestoreV2:441"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_442"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:442"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_443"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
  input: "save/RestoreV2:443"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_444"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:444"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_445"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_6/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:445"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_6/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_446"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias"
  input: "save/RestoreV2:446"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_447"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam"
  input: "save/RestoreV2:447"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_448"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/bias/Adam_1"
  input: "save/RestoreV2:448"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_449"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel"
  input: "save/RestoreV2:449"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_450"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam"
  input: "save/RestoreV2:450"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_451"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:451"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_452"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
  input: "save/RestoreV2:452"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_453"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam"
  input: "save/RestoreV2:453"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_454"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:454"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_455"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
  input: "save/RestoreV2:455"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_456"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:456"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_457"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:457"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_458"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
  input: "save/RestoreV2:458"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_459"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam"
  input: "save/RestoreV2:459"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_460"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:460"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_461"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
  input: "save/RestoreV2:461"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_462"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:462"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_463"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_7/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:463"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_7/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_464"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias"
  input: "save/RestoreV2:464"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_465"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam"
  input: "save/RestoreV2:465"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_466"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/bias/Adam_1"
  input: "save/RestoreV2:466"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_467"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel"
  input: "save/RestoreV2:467"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_468"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam"
  input: "save/RestoreV2:468"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_469"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:469"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_470"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
  input: "save/RestoreV2:470"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_471"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam"
  input: "save/RestoreV2:471"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_472"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:472"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_473"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
  input: "save/RestoreV2:473"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_474"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:474"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_475"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:475"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_476"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
  input: "save/RestoreV2:476"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_477"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam"
  input: "save/RestoreV2:477"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_478"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:478"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_479"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
  input: "save/RestoreV2:479"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_480"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:480"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_481"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_8/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:481"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_8/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_482"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias"
  input: "save/RestoreV2:482"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_483"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam"
  input: "save/RestoreV2:483"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_484"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/bias/Adam_1"
  input: "save/RestoreV2:484"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_485"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel"
  input: "save/RestoreV2:485"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_486"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam"
  input: "save/RestoreV2:486"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_487"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d/kernel/Adam_1"
  input: "save/RestoreV2:487"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_488"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
  input: "save/RestoreV2:488"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_489"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam"
  input: "save/RestoreV2:489"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_490"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/bias/Adam_1"
  input: "save/RestoreV2:490"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_491"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
  input: "save/RestoreV2:491"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_492"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam"
  input: "save/RestoreV2:492"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_493"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_1/kernel/Adam_1"
  input: "save/RestoreV2:493"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_494"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
  input: "save/RestoreV2:494"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_495"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam"
  input: "save/RestoreV2:495"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_496"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/bias/Adam_1"
  input: "save/RestoreV2:496"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_497"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
  input: "save/RestoreV2:497"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_498"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam"
  input: "save/RestoreV2:498"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_499"
  op: "Assign"
  input: "Wavenet/ResNet/ResBlock_9/conv1d_2/kernel/Adam_1"
  input: "save/RestoreV2:499"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Wavenet/ResNet/ResBlock_9/conv1d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_500"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2:500"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_501"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:501"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Upsample/Deconvolution/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_18"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_19"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_21"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_22"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_23"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_24"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_25"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_26"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_265"
  input: "^save/Assign_266"
  input: "^save/Assign_267"
  input: "^save/Assign_268"
  input: "^save/Assign_269"
  input: "^save/Assign_27"
  input: "^save/Assign_270"
  input: "^save/Assign_271"
  input: "^save/Assign_272"
  input: "^save/Assign_273"
  input: "^save/Assign_274"
  input: "^save/Assign_275"
  input: "^save/Assign_276"
  input: "^save/Assign_277"
  input: "^save/Assign_278"
  input: "^save/Assign_279"
  input: "^save/Assign_28"
  input: "^save/Assign_280"
  input: "^save/Assign_281"
  input: "^save/Assign_282"
  input: "^save/Assign_283"
  input: "^save/Assign_284"
  input: "^save/Assign_285"
  input: "^save/Assign_286"
  input: "^save/Assign_287"
  input: "^save/Assign_288"
  input: "^save/Assign_289"
  input: "^save/Assign_29"
  input: "^save/Assign_290"
  input: "^save/Assign_291"
  input: "^save/Assign_292"
  input: "^save/Assign_293"
  input: "^save/Assign_294"
  input: "^save/Assign_295"
  input: "^save/Assign_296"
  input: "^save/Assign_297"
  input: "^save/Assign_298"
  input: "^save/Assign_299"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_300"
  input: "^save/Assign_301"
  input: "^save/Assign_302"
  input: "^save/Assign_303"
  input: "^save/Assign_304"
  input: "^save/Assign_305"
  input: "^save/Assign_306"
  input: "^save/Assign_307"
  input: "^save/Assign_308"
  input: "^save/Assign_309"
  input: "^save/Assign_31"
  input: "^save/Assign_310"
  input: "^save/Assign_311"
  input: "^save/Assign_312"
  input: "^save/Assign_313"
  input: "^save/Assign_314"
  input: "^save/Assign_315"
  input: "^save/Assign_316"
  input: "^save/Assign_317"
  input: "^save/Assign_318"
  input: "^save/Assign_319"
  input: "^save/Assign_32"
  input: "^save/Assign_320"
  input: "^save/Assign_321"
  input: "^save/Assign_322"
  input: "^save/Assign_323"
  input: "^save/Assign_324"
  input: "^save/Assign_325"
  input: "^save/Assign_326"
  input: "^save/Assign_327"
  input: "^save/Assign_328"
  input: "^save/Assign_329"
  input: "^save/Assign_33"
  input: "^save/Assign_330"
  input: "^save/Assign_331"
  input: "^save/Assign_332"
  input: "^save/Assign_333"
  input: "^save/Assign_334"
  input: "^save/Assign_335"
  input: "^save/Assign_336"
  input: "^save/Assign_337"
  input: "^save/Assign_338"
  input: "^save/Assign_339"
  input: "^save/Assign_34"
  input: "^save/Assign_340"
  input: "^save/Assign_341"
  input: "^save/Assign_342"
  input: "^save/Assign_343"
  input: "^save/Assign_344"
  input: "^save/Assign_345"
  input: "^save/Assign_346"
  input: "^save/Assign_347"
  input: "^save/Assign_348"
  input: "^save/Assign_349"
  input: "^save/Assign_35"
  input: "^save/Assign_350"
  input: "^save/Assign_351"
  input: "^save/Assign_352"
  input: "^save/Assign_353"
  input: "^save/Assign_354"
  input: "^save/Assign_355"
  input: "^save/Assign_356"
  input: "^save/Assign_357"
  input: "^save/Assign_358"
  input: "^save/Assign_359"
  input: "^save/Assign_36"
  input: "^save/Assign_360"
  input: "^save/Assign_361"
  input: "^save/Assign_362"
  input: "^save/Assign_363"
  input: "^save/Assign_364"
  input: "^save/Assign_365"
  input: "^save/Assign_366"
  input: "^save/Assign_367"
  input: "^save/Assign_368"
  input: "^save/Assign_369"
  input: "^save/Assign_37"
  input: "^save/Assign_370"
  input: "^save/Assign_371"
  input: "^save/Assign_372"
  input: "^save/Assign_373"
  input: "^save/Assign_374"
  input: "^save/Assign_375"
  input: "^save/Assign_376"
  input: "^save/Assign_377"
  input: "^save/Assign_378"
  input: "^save/Assign_379"
  input: "^save/Assign_38"
  input: "^save/Assign_380"
  input: "^save/Assign_381"
  input: "^save/Assign_382"
  input: "^save/Assign_383"
  input: "^save/Assign_384"
  input: "^save/Assign_385"
  input: "^save/Assign_386"
  input: "^save/Assign_387"
  input: "^save/Assign_388"
  input: "^save/Assign_389"
  input: "^save/Assign_39"
  input: "^save/Assign_390"
  input: "^save/Assign_391"
  input: "^save/Assign_392"
  input: "^save/Assign_393"
  input: "^save/Assign_394"
  input: "^save/Assign_395"
  input: "^save/Assign_396"
  input: "^save/Assign_397"
  input: "^save/Assign_398"
  input: "^save/Assign_399"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_400"
  input: "^save/Assign_401"
  input: "^save/Assign_402"
  input: "^save/Assign_403"
  input: "^save/Assign_404"
  input: "^save/Assign_405"
  input: "^save/Assign_406"
  input: "^save/Assign_407"
  input: "^save/Assign_408"
  input: "^save/Assign_409"
  input: "^save/Assign_41"
  input: "^save/Assign_410"
  input: "^save/Assign_411"
  input: "^save/Assign_412"
  input: "^save/Assign_413"
  input: "^save/Assign_414"
  input: "^save/Assign_415"
  input: "^save/Assign_416"
  input: "^save/Assign_417"
  input: "^save/Assign_418"
  input: "^save/Assign_419"
  input: "^save/Assign_42"
  input: "^save/Assign_420"
  input: "^save/Assign_421"
  input: "^save/Assign_422"
  input: "^save/Assign_423"
  input: "^save/Assign_424"
  input: "^save/Assign_425"
  input: "^save/Assign_426"
  input: "^save/Assign_427"
  input: "^save/Assign_428"
  input: "^save/Assign_429"
  input: "^save/Assign_43"
  input: "^save/Assign_430"
  input: "^save/Assign_431"
  input: "^save/Assign_432"
  input: "^save/Assign_433"
  input: "^save/Assign_434"
  input: "^save/Assign_435"
  input: "^save/Assign_436"
  input: "^save/Assign_437"
  input: "^save/Assign_438"
  input: "^save/Assign_439"
  input: "^save/Assign_44"
  input: "^save/Assign_440"
  input: "^save/Assign_441"
  input: "^save/Assign_442"
  input: "^save/Assign_443"
  input: "^save/Assign_444"
  input: "^save/Assign_445"
  input: "^save/Assign_446"
  input: "^save/Assign_447"
  input: "^save/Assign_448"
  input: "^save/Assign_449"
  input: "^save/Assign_45"
  input: "^save/Assign_450"
  input: "^save/Assign_451"
  input: "^save/Assign_452"
  input: "^save/Assign_453"
  input: "^save/Assign_454"
  input: "^save/Assign_455"
  input: "^save/Assign_456"
  input: "^save/Assign_457"
  input: "^save/Assign_458"
  input: "^save/Assign_459"
  input: "^save/Assign_46"
  input: "^save/Assign_460"
  input: "^save/Assign_461"
  input: "^save/Assign_462"
  input: "^save/Assign_463"
  input: "^save/Assign_464"
  input: "^save/Assign_465"
  input: "^save/Assign_466"
  input: "^save/Assign_467"
  input: "^save/Assign_468"
  input: "^save/Assign_469"
  input: "^save/Assign_47"
  input: "^save/Assign_470"
  input: "^save/Assign_471"
  input: "^save/Assign_472"
  input: "^save/Assign_473"
  input: "^save/Assign_474"
  input: "^save/Assign_475"
  input: "^save/Assign_476"
  input: "^save/Assign_477"
  input: "^save/Assign_478"
  input: "^save/Assign_479"
  input: "^save/Assign_48"
  input: "^save/Assign_480"
  input: "^save/Assign_481"
  input: "^save/Assign_482"
  input: "^save/Assign_483"
  input: "^save/Assign_484"
  input: "^save/Assign_485"
  input: "^save/Assign_486"
  input: "^save/Assign_487"
  input: "^save/Assign_488"
  input: "^save/Assign_489"
  input: "^save/Assign_49"
  input: "^save/Assign_490"
  input: "^save/Assign_491"
  input: "^save/Assign_492"
  input: "^save/Assign_493"
  input: "^save/Assign_494"
  input: "^save/Assign_495"
  input: "^save/Assign_496"
  input: "^save/Assign_497"
  input: "^save/Assign_498"
  input: "^save/Assign_499"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_500"
  input: "^save/Assign_501"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
library {
  function {
    signature {
      name: "_make_dataset_wBeAOCZE1EI"
      output_arg {
        name: "repeatdataset"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorSliceDataset/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "data/train_arlu.tfrecord"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/flat_filenames/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/flat_filenames"
      op: "Reshape"
      input: "TensorSliceDataset/Const:output:0"
      input: "TensorSliceDataset/flat_filenames/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "TensorSliceDataset/flat_filenames:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorSliceDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_Qky8TA5ITQU"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset/num_parallel_calls"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "FlatMapDataset:handle:0"
      input: "ParallelMapDataset/num_parallel_calls:output:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_JDgOH9okeRc"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "ParallelMapDataset_1/num_parallel_calls_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset_1"
      op: "ParallelMapDataset"
      input: "ParallelMapDataset:handle:0"
      input: "ParallelMapDataset_1/num_parallel_calls_1:output:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_gxA8N7f4sow"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7680
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7680
              }
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7680
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT32
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "RepeatDataset/count"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ParallelMapDataset_1:handle:0"
      input: "RepeatDataset/count:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7680
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7680
              }
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7680
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT32
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    ret {
      key: "repeatdataset"
      value: "RepeatDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_Qky8TA5ITQU"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "tfrecorddataset"
        type: DT_VARIANT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "compression_type"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "arg0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
    }
    ret {
      key: "tfrecorddataset"
      value: "TFRecordDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_gxA8N7f4sow"
      input_arg {
        name: "arg0"
        type: DT_FLOAT
      }
      output_arg {
        name: "mulaw_encode_cast"
        type: DT_INT32
      }
      output_arg {
        name: "one_hot"
        type: DT_FLOAT
      }
      output_arg {
        name: "normalize"
        type: DT_FLOAT
      }
      output_arg {
        name: "power_to_db_truediv"
        type: DT_FLOAT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "random_uniform/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_uniform/min"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "random_uniform/max"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 7680.0
          }
        }
      }
    }
    node_def {
      name: "random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "random_uniform/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "random_uniform/sub"
      op: "Sub"
      input: "random_uniform/max:output:0"
      input: "random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform/mul"
      op: "Mul"
      input: "random_uniform/RandomUniform:output:0"
      input: "random_uniform/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "random_uniform"
      op: "Add"
      input: "random_uniform/mul:z:0"
      input: "random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "random_uniform:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "frame/frame_length"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 7680
          }
        }
      }
    }
    node_def {
      name: "frame/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "frame/Rank"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/range/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/range/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/range"
      op: "Range"
      input: "frame/range/start:output:0"
      input: "frame/Rank:output:0"
      input: "frame/range/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/add"
      op: "Add"
      input: "frame/axis:output:0"
      input: "frame/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/strided_slice/stack"
      op: "Pack"
      input: "frame/axis:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/strided_slice/stack_1"
      op: "Pack"
      input: "frame/add:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/strided_slice"
      op: "StridedSlice"
      input: "frame/range:output:0"
      input: "frame/strided_slice/stack:output:0"
      input: "frame/strided_slice/stack_1:output:0"
      input: "frame/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "frame/Shape"
      op: "Shape"
      input: "arg0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/sub/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/sub"
      op: "Sub"
      input: "frame/Rank:output:0"
      input: "frame/sub/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/sub_1"
      op: "Sub"
      input: "frame/sub:z:0"
      input: "frame/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/packed/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/packed"
      op: "Pack"
      input: "frame/strided_slice:output:0"
      input: "frame/packed/1:output:0"
      input: "frame/sub_1:z:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/split/split_dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/split"
      op: "SplitV"
      input: "frame/Shape:output:0"
      input: "frame/packed:output:0"
      input: "frame/split/split_dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tlen"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "num_split"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "frame/Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape"
      op: "Reshape"
      input: "frame/split:output:1"
      input: "frame/Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/Size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/Size_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "frame/Neg"
      op: "Neg"
      input: "frame/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/floordiv"
      op: "FloorDiv"
      input: "frame/Neg:y:0"
      input: "Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/Neg_1"
      op: "Neg"
      input: "frame/floordiv:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/sub_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/sub_2"
      op: "Sub"
      input: "frame/Neg_1:y:0"
      input: "frame/sub_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/mul"
      op: "Mul"
      input: "Cast:y:0"
      input: "frame/sub_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/add_1"
      op: "Add"
      input: "frame/frame_length:output:0"
      input: "frame/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/sub_3"
      op: "Sub"
      input: "frame/add_1:z:0"
      input: "frame/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/Maximum/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/Maximum"
      op: "Maximum"
      input: "frame/Maximum/x:output:0"
      input: "frame/sub_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/zeros/mul/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "frame/zeros/mul"
      op: "Mul"
      input: "frame/Size:output:0"
      input: "frame/zeros/mul/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/zeros/Less/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1000
          }
        }
      }
    }
    node_def {
      name: "frame/zeros/Less"
      op: "Less"
      input: "frame/zeros/mul:z:0"
      input: "frame/zeros/Less/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/zeros/packed/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "frame/zeros/packed"
      op: "Pack"
      input: "frame/Size:output:0"
      input: "frame/zeros/packed/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/zeros/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/zeros"
      op: "Fill"
      input: "frame/zeros/packed:output:0"
      input: "frame/zeros/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/zeros_1/mul/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "frame/zeros_1/mul"
      op: "Mul"
      input: "frame/Size_1:output:0"
      input: "frame/zeros_1/mul/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/zeros_1/Less/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1000
          }
        }
      }
    }
    node_def {
      name: "frame/zeros_1/Less"
      op: "Less"
      input: "frame/zeros_1/mul:z:0"
      input: "frame/zeros_1/Less/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/zeros_1/packed/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "frame/zeros_1/packed"
      op: "Pack"
      input: "frame/Size_1:output:0"
      input: "frame/zeros_1/packed/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/zeros_1/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/zeros_1"
      op: "Fill"
      input: "frame/zeros_1/packed:output:0"
      input: "frame/zeros_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/concat/values_1/0/0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/concat/values_1/0"
      op: "Pack"
      input: "frame/concat/values_1/0/0:output:0"
      input: "frame/Maximum:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/concat/values_1"
      op: "Pack"
      input: "frame/concat/values_1/0:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/concat"
      op: "ConcatV2"
      input: "frame/zeros:output:0"
      input: "frame/concat/values_1:output:0"
      input: "frame/zeros_1:output:0"
      input: "frame/concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/PadV2"
      op: "PadV2"
      input: "arg0"
      input: "frame/concat:output:0"
      input: "frame/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/Shape_1"
      op: "Shape"
      input: "frame/PadV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/add_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/add_2"
      op: "Add"
      input: "frame/strided_slice:output:0"
      input: "frame/add_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/strided_slice_1/stack"
      op: "Pack"
      input: "frame/strided_slice:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/strided_slice_1/stack_1"
      op: "Pack"
      input: "frame/add_2:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/strided_slice_1"
      op: "StridedSlice"
      input: "frame/Shape_1:output:0"
      input: "frame/strided_slice_1/stack:output:0"
      input: "frame/strided_slice_1/stack_1:output:0"
      input: "frame/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Enter"
      op: "Enter"
      input: "frame/frame_length:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "frame/gcd/while/while_context"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 10
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Enter_1"
      op: "Enter"
      input: "Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "frame/gcd/while/while_context"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 10
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Merge"
      op: "Merge"
      input: "frame/gcd/while/Enter:output:0"
      input: "frame/gcd/while/NextIteration:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Merge_1"
      op: "Merge"
      input: "frame/gcd/while/Enter_1:output:0"
      input: "frame/gcd/while/NextIteration_1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/gcd/while/zeros_like"
      op: "Const"
      input: "^frame/gcd/while/Merge"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Greater"
      op: "Greater"
      input: "frame/gcd/while/Merge_1:output:0"
      input: "frame/gcd/while/zeros_like:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/gcd/while/LoopCond"
      op: "LoopCond"
      input: "frame/gcd/while/Greater:z:0"
    }
    node_def {
      name: "frame/gcd/while/Switch"
      op: "Switch"
      input: "frame/gcd/while/Merge:output:0"
      input: "frame/gcd/while/LoopCond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@frame/gcd/while/Merge"
          }
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Switch_1"
      op: "Switch"
      input: "frame/gcd/while/Merge_1:output:0"
      input: "frame/gcd/while/LoopCond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@frame/gcd/while/Merge_1"
          }
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Identity"
      op: "Identity"
      input: "frame/gcd/while/Switch:output_true:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Identity_1"
      op: "Identity"
      input: "frame/gcd/while/Switch_1:output_true:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/gcd/while/FloorMod"
      op: "FloorMod"
      input: "frame/gcd/while/Identity:output:0"
      input: "frame/gcd/while/Identity_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/gcd/while/NextIteration"
      op: "NextIteration"
      input: "frame/gcd/while/Identity_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/gcd/while/NextIteration_1"
      op: "NextIteration"
      input: "frame/gcd/while/FloorMod:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Exit"
      op: "Exit"
      input: "frame/gcd/while/Switch:output_false:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/gcd/while/Exit_1"
      op: "Exit"
      input: "frame/gcd/while/Switch_1:output_false:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/floordiv_1"
      op: "FloorDiv"
      input: "frame/frame_length:output:0"
      input: "frame/gcd/while/Exit:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/floordiv_2"
      op: "FloorDiv"
      input: "Cast:y:0"
      input: "frame/gcd/while/Exit:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/floordiv_3"
      op: "FloorDiv"
      input: "frame/strided_slice_1:output:0"
      input: "frame/gcd/while/Exit:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/mul_1"
      op: "Mul"
      input: "frame/floordiv_3:z:0"
      input: "frame/gcd/while/Exit:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/concat_1/values_1"
      op: "Pack"
      input: "frame/mul_1:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/concat_1/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/concat_1"
      op: "ConcatV2"
      input: "frame/split:output:0"
      input: "frame/concat_1/values_1:output:0"
      input: "frame/split:output:2"
      input: "frame/concat_1/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/concat_2/values_1"
      op: "Pack"
      input: "frame/floordiv_3:z:0"
      input: "frame/gcd/while/Exit:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/concat_2/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/concat_2"
      op: "ConcatV2"
      input: "frame/split:output:0"
      input: "frame/concat_2/values_1:output:0"
      input: "frame/split:output:2"
      input: "frame/concat_2/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/zeros_like"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/ones_like/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/ones_like/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/ones_like"
      op: "Fill"
      input: "frame/ones_like/Shape:output:0"
      input: "frame/ones_like/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/StridedSlice"
      op: "StridedSlice"
      input: "frame/PadV2:output:0"
      input: "frame/zeros_like:output:0"
      input: "frame/concat_1:output:0"
      input: "frame/ones_like:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/Reshape_1"
      op: "Reshape"
      input: "frame/StridedSlice:output:0"
      input: "frame/concat_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/range_1/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/range_1/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/range_1"
      op: "Range"
      input: "frame/range_1/start:output:0"
      input: "frame/Neg_1:y:0"
      input: "frame/range_1/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/mul_2"
      op: "Mul"
      input: "frame/range_1:output:0"
      input: "frame/floordiv_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/Reshape_2/shape/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape_2/shape"
      op: "Pack"
      input: "frame/Neg_1:y:0"
      input: "frame/Reshape_2/shape/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/Reshape_2"
      op: "Reshape"
      input: "frame/mul_2:z:0"
      input: "frame/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/range_2/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/range_2/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/range_2"
      op: "Range"
      input: "frame/range_2/start:output:0"
      input: "frame/floordiv_1:z:0"
      input: "frame/range_2/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/Reshape_3/shape/0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape_3/shape"
      op: "Pack"
      input: "frame/Reshape_3/shape/0:output:0"
      input: "frame/floordiv_1:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/Reshape_3"
      op: "Reshape"
      input: "frame/range_2:output:0"
      input: "frame/Reshape_3/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/add_3"
      op: "Add"
      input: "frame/Reshape_2:output:0"
      input: "frame/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/GatherV2"
      op: "GatherV2"
      input: "frame/Reshape_1:output:0"
      input: "frame/add_3:z:0"
      input: "frame/strided_slice:output:0"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "frame/concat_3/values_1"
      op: "Pack"
      input: "frame/Neg_1:y:0"
      input: "frame/frame_length:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/concat_3/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/concat_3"
      op: "ConcatV2"
      input: "frame/split:output:0"
      input: "frame/concat_3/values_1:output:0"
      input: "frame/split:output:2"
      input: "frame/concat_3/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/Reshape_4"
      op: "Reshape"
      input: "frame/GatherV2:output:0"
      input: "frame/concat_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/Sign"
      op: "Sign"
      input: "frame/Reshape_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/Abs"
      op: "Abs"
      input: "frame/Reshape_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/mul/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 255.0
          }
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/mul"
      op: "Mul"
      input: "MuLaw_Encode/mul/x:output:0"
      input: "MuLaw_Encode/Abs:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/Log1p"
      op: "Log1p"
      input: "MuLaw_Encode/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/Log1p_1/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 255.0
          }
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/Log1p_1"
      op: "Log1p"
      input: "MuLaw_Encode/Log1p_1/x:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/truediv"
      op: "RealDiv"
      input: "MuLaw_Encode/Log1p:y:0"
      input: "MuLaw_Encode/Log1p_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/mul_1"
      op: "Mul"
      input: "MuLaw_Encode/Sign:y:0"
      input: "MuLaw_Encode/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/add"
      op: "Add"
      input: "MuLaw_Encode/mul_1:z:0"
      input: "MuLaw_Encode/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/truediv_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/truediv_1"
      op: "RealDiv"
      input: "MuLaw_Encode/add:z:0"
      input: "MuLaw_Encode/truediv_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/mul_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 255.0
          }
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/mul_2"
      op: "Mul"
      input: "MuLaw_Encode/truediv_1:z:0"
      input: "MuLaw_Encode/mul_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/add_1"
      op: "Add"
      input: "MuLaw_Encode/mul_2:z:0"
      input: "MuLaw_Encode/add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "MuLaw_Encode/Cast"
      op: "Cast"
      input: "MuLaw_Encode/add_1:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "one_hot/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "one_hot/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "one_hot/depth"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 256
          }
        }
      }
    }
    node_def {
      name: "one_hot/on_value"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "one_hot/off_value"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "one_hot_0"
      op: "OneHot"
      input: "MuLaw_Encode/Cast:y:0"
      input: "one_hot/depth:output:0"
      input: "one_hot/on_value:output:0"
      input: "one_hot/off_value:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "TI"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: -1
        }
      }
    }
    node_def {
      name: "Cast_1"
      op: "Cast"
      input: "MuLaw_Encode/Cast:y:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "normalize/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 255.0
          }
        }
      }
    }
    node_def {
      name: "normalize_0"
      op: "RealDiv"
      input: "Cast_1:y:0"
      input: "normalize/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame_length"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame_step"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 256
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/fft_length"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Rank"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/range/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/range/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/range"
      op: "Range"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/range/start:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Rank:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/range/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/add"
      op: "Add"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/axis:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice/stack"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/axis:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice/stack_1"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/add:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice"
      op: "StridedSlice"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/range:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice/stack:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice/stack_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Shape"
      op: "Shape"
      input: "frame/Reshape_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/sub/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/sub"
      op: "Sub"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Rank:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/sub/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/sub_1"
      op: "Sub"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/sub:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/packed/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/packed"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/packed/1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/sub_1:z:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/split/split_dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/split"
      op: "SplitV"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Shape:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/packed:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/split/split_dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tlen"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "num_split"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape"
      op: "Reshape"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/split:output:1"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Size_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Neg"
      op: "Neg"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv"
      op: "FloorDiv"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Neg:y:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame_step:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Neg_1"
      op: "Neg"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/sub_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/sub_2"
      op: "Sub"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Neg_1:y:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/sub_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/mul"
      op: "Mul"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame_step:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/sub_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/add_1"
      op: "Add"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame_length:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/sub_3"
      op: "Sub"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/add_1:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Maximum/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Maximum"
      op: "Maximum"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Maximum/x:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/sub_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/mul/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/mul"
      op: "Mul"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Size:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/mul/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/Less/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1000
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/Less"
      op: "Less"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/mul:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/Less/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/packed/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/packed"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Size:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/packed/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros"
      op: "Fill"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/packed:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/mul/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/mul"
      op: "Mul"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Size_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/mul/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/Less/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1000
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/Less"
      op: "Less"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/mul:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/Less/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/packed/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/packed"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Size_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/packed/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1"
      op: "Fill"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/packed:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat/values_1/0/0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat/values_1/0"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat/values_1/0/0:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Maximum:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat/values_1"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat/values_1/0:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat"
      op: "ConcatV2"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat/values_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/PadV2"
      op: "PadV2"
      input: "frame/Reshape_4:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Shape_1"
      op: "Shape"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/PadV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/add_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/add_2"
      op: "Add"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/add_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice_1/stack"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice_1/stack_1"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/add_2:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice_1"
      op: "StridedSlice"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Shape_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice_1/stack:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice_1/stack_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/gcd/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 256
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv_1"
      op: "FloorDiv"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame_length:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/gcd/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv_2"
      op: "FloorDiv"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame_step:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/gcd/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv_3"
      op: "FloorDiv"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/gcd/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/mul_1"
      op: "Mul"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv_3:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/gcd/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_1/values_1"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/mul_1:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_1/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_1"
      op: "ConcatV2"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/split:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_1/values_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/split:output:2"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_1/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_2/values_1"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv_3:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/gcd/Const:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_2/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_2"
      op: "ConcatV2"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/split:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_2/values_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/split:output:2"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_2/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_like"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/ones_like/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/ones_like/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/ones_like"
      op: "Fill"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/ones_like/Shape:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/ones_like/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/StridedSlice"
      op: "StridedSlice"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/PadV2:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/zeros_like:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/ones_like:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_1"
      op: "Reshape"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/StridedSlice:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/range_1/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/range_1/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/range_1"
      op: "Range"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/range_1/start:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Neg_1:y:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/range_1/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/mul_2"
      op: "Mul"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/range_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_2/shape/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_2/shape"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Neg_1:y:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_2/shape/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_2"
      op: "Reshape"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/mul_2:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/range_2/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/range_2/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/range_2"
      op: "Range"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/range_2/start:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv_1:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/range_2/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_3/shape/0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_3/shape"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_3/shape/0:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/floordiv_1:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_3"
      op: "Reshape"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/range_2:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_3/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/add_3"
      op: "Add"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_2:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/GatherV2"
      op: "GatherV2"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/add_3:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/strided_slice:output:0"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_3/values_1"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Neg_1:y:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame_length:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_3/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_3"
      op: "ConcatV2"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/split:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_3/values_1:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/split:output:2"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_3/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_4"
      op: "Reshape"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/GatherV2:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/concat_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/periodic"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: true
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Cast"
      op: "Cast"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/periodic:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/FloorMod/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/FloorMod"
      op: "FloorMod"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame_length:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/FloorMod/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub"
      op: "Sub"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub/x:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/FloorMod:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/mul"
      op: "Mul"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Cast:y:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/add"
      op: "Add"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame_length:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub_1"
      op: "Sub"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/add:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Cast_1"
      op: "Cast"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub_1:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/range/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/range/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/range"
      op: "Range"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/range/start:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame_length:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/range/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Cast_2"
      op: "Cast"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/range:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 6.2831854820251465
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/mul_1"
      op: "Mul"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Const:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Cast_2:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/truediv"
      op: "RealDiv"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/mul_1:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Cos"
      op: "Cos"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/mul_2/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/mul_2"
      op: "Mul"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/mul_2/x:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/Cos:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub_2/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub_2"
      op: "Sub"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub_2/x:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/mul"
      op: "Mul"
      input: "make_mel_spectorogram/make_spectorogram/stft/frame/Reshape_4:output:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/hann_window/sub_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/rfft/packed"
      op: "Pack"
      input: "make_mel_spectorogram/make_spectorogram/stft/fft_length:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/stft/rfft"
      op: "RFFT"
      input: "make_mel_spectorogram/make_spectorogram/stft/mul:z:0"
      input: "make_mel_spectorogram/make_spectorogram/stft/rfft/packed:output:0"
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/Abs"
      op: "ComplexAbs"
      input: "make_mel_spectorogram/make_spectorogram/stft/rfft:output:0"
      attr {
        key: "T"
        value {
          type: DT_COMPLEX64
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/Pow/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/make_spectorogram/Pow"
      op: "Pow"
      input: "make_mel_spectorogram/make_spectorogram/Abs:y:0"
      input: "make_mel_spectorogram/make_spectorogram/Pow/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/sample_rate"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 16000.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/lower_edge_hertz"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/upper_edge_hertz"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 8000.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/truediv/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/truediv"
      op: "RealDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/sample_rate:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/truediv/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/LinSpace/num"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/LinSpace"
      op: "LinSpace"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Const:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/truediv:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/LinSpace/num:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/strided_slice"
      op: "StridedSlice"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/LinSpace:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/strided_slice/stack:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/strided_slice/stack_1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/truediv/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 700.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/truediv"
      op: "RealDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/strided_slice:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/truediv/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/add/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/add"
      op: "Add"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/add/x:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/Log"
      op: "Log"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/mul/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1127.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/mul"
      op: "Mul"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/mul/x:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/Log:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/ExpandDims"
      op: "ExpandDims"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel/mul:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/truediv/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 700.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/truediv"
      op: "RealDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/lower_edge_hertz:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/truediv/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/add/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/add"
      op: "Add"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/add/x:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/Log"
      op: "Log"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/mul/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1127.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/mul"
      op: "Mul"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/mul/x:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/Log:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/truediv/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 700.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/truediv"
      op: "RealDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/upper_edge_hertz:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/truediv/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/add/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/add"
      op: "Add"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/add/x:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/Log"
      op: "Log"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/mul/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1127.0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/mul"
      op: "Mul"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/mul/x:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/Log:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/LinSpace_1/num"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 130
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/LinSpace_1"
      op: "LinSpace"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_1/mul:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/hertz_to_mel_2/mul:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/LinSpace_1/num:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/frame_length"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/frame_step"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Rank"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range"
      op: "Range"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range/start:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Rank:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add"
      op: "Add"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/axis:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice/stack"
      op: "Pack"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/axis:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice/stack_1"
      op: "Pack"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice"
      op: "StridedSlice"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice/stack:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice/stack_1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 130
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/sub/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/sub"
      op: "Sub"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Rank:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/sub/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/sub_1"
      op: "Sub"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/sub:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/packed/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/packed"
      op: "Pack"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/packed/1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/sub_1:z:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split/split_dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split"
      op: "SplitV"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Shape:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/packed:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split/split_dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tlen"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "num_split"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape"
      op: "Reshape"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split:output:1"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Size_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/sub_2"
      op: "Sub"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/frame_length:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv"
      op: "FloorDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/sub_2:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/frame_step:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add_1/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add_1"
      op: "Add"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add_1/x:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Maximum/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Maximum"
      op: "Maximum"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Maximum/x:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/gcd/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv_1"
      op: "FloorDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/frame_length:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/gcd/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv_2"
      op: "FloorDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/frame_step:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/gcd/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv_3"
      op: "FloorDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/gcd/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/mul"
      op: "Mul"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv_3:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/gcd/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat/values_1"
      op: "Pack"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/mul:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat"
      op: "ConcatV2"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat/values_1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split:output:2"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_1/values_1"
      op: "Pack"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv_3:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/gcd/Const:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_1/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_1"
      op: "ConcatV2"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_1/values_1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split:output:2"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_1/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/zeros_like"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/ones_like/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/ones_like/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/ones_like"
      op: "Fill"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/ones_like/Shape:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/ones_like/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/StridedSlice"
      op: "StridedSlice"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/LinSpace_1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/zeros_like:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/ones_like:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_1"
      op: "Reshape"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/StridedSlice:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_1/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_1/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_1"
      op: "Range"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_1/start:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Maximum:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_1/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/mul_1"
      op: "Mul"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_2/shape/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_2/shape"
      op: "Pack"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Maximum:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_2/shape/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_2"
      op: "Reshape"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/mul_1:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_2/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_2/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_2"
      op: "Range"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_2/start:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv_1:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_2/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_3/shape/0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_3/shape"
      op: "Pack"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_3/shape/0:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/floordiv_1:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_3"
      op: "Reshape"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/range_2:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_3/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add_2"
      op: "Add"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_2:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/GatherV2"
      op: "GatherV2"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/add_2:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/strided_slice:output:0"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_2/values_1"
      op: "Pack"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Maximum:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/frame_length:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_2/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_2"
      op: "ConcatV2"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_2/values_1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/split:output:2"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_2/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_4"
      op: "Reshape"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/GatherV2:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/concat_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/split/split_dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/split"
      op: "Split"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/split/split_dim:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/frame/Reshape_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "num_split"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape"
      op: "Reshape"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/split:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_1"
      op: "Reshape"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/split:output:1"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_2"
      op: "Reshape"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/split:output:2"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/sub"
      op: "Sub"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/ExpandDims:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/sub_1"
      op: "Sub"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_1:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/truediv_1"
      op: "RealDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/sub:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/sub_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/sub_2"
      op: "Sub"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_2:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/ExpandDims:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/sub_3"
      op: "Sub"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_2:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/truediv_2"
      op: "RealDiv"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/sub_2:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/sub_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Minimum"
      op: "Minimum"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/truediv_1:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/truediv_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/Maximum"
      op: "Maximum"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Const:output:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Minimum:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/linear_to_mel_weight_matrix"
      op: "Pad"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/Maximum:z:0"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/transpose/perm"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/transpose"
      op: "Transpose"
      input: "make_mel_spectorogram/make_spectorogram/Pow:z:0"
      input: "make_mel_spectorogram/einsum/transpose/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/transpose_1/perm"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/transpose_1"
      op: "Transpose"
      input: "make_mel_spectorogram/linear_to_mel_weight_matrix:output:0"
      input: "make_mel_spectorogram/einsum/transpose_1/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/Shape"
      op: "Shape"
      input: "make_mel_spectorogram/einsum/transpose:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/strided_slice"
      op: "StridedSlice"
      input: "make_mel_spectorogram/einsum/Shape:output:0"
      input: "make_mel_spectorogram/einsum/strided_slice/stack:output:0"
      input: "make_mel_spectorogram/einsum/strided_slice/stack_1:output:0"
      input: "make_mel_spectorogram/einsum/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/mul/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/mul"
      op: "Mul"
      input: "make_mel_spectorogram/einsum/mul/x:output:0"
      input: "make_mel_spectorogram/einsum/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/mul_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 30
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/mul_1"
      op: "Mul"
      input: "make_mel_spectorogram/einsum/mul:z:0"
      input: "make_mel_spectorogram/einsum/mul_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/Reshape/shape/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/Reshape/shape"
      op: "Pack"
      input: "make_mel_spectorogram/einsum/mul_1:z:0"
      input: "make_mel_spectorogram/einsum/Reshape/shape/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/Reshape"
      op: "Reshape"
      input: "make_mel_spectorogram/einsum/transpose:y:0"
      input: "make_mel_spectorogram/einsum/Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/MatMul"
      op: "MatMul"
      input: "make_mel_spectorogram/einsum/Reshape:output:0"
      input: "make_mel_spectorogram/einsum/transpose_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/Reshape_1/shape/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 30
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/Reshape_1/shape/2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/Reshape_1/shape"
      op: "Pack"
      input: "make_mel_spectorogram/einsum/strided_slice:output:0"
      input: "make_mel_spectorogram/einsum/Reshape_1/shape/1:output:0"
      input: "make_mel_spectorogram/einsum/Reshape_1/shape/2:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/Reshape_1"
      op: "Reshape"
      input: "make_mel_spectorogram/einsum/MatMul:product:0"
      input: "make_mel_spectorogram/einsum/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/transpose_2/perm"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "make_mel_spectorogram/einsum/transpose_2"
      op: "Transpose"
      input: "make_mel_spectorogram/einsum/Reshape_1:output:0"
      input: "make_mel_spectorogram/einsum/transpose_2/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "power_to_db/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "power_to_db/Max"
      op: "Max"
      input: "make_mel_spectorogram/einsum/transpose_2:y:0"
      input: "power_to_db/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "power_to_db/clip_by_value/Minimum"
      op: "Minimum"
      input: "make_mel_spectorogram/einsum/transpose_2:y:0"
      input: "power_to_db/Max:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/clip_by_value/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.000000013351432e-10
          }
        }
      }
    }
    node_def {
      name: "power_to_db/clip_by_value"
      op: "Maximum"
      input: "power_to_db/clip_by_value/Minimum:z:0"
      input: "power_to_db/clip_by_value/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/log_with_base/Log"
      op: "Log"
      input: "power_to_db/clip_by_value:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/log_with_base/Log_1/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 10.0
          }
        }
      }
    }
    node_def {
      name: "power_to_db/log_with_base/Log_1"
      op: "Log"
      input: "power_to_db/log_with_base/Log_1/x:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/log_with_base/truediv"
      op: "RealDiv"
      input: "power_to_db/log_with_base/Log:y:0"
      input: "power_to_db/log_with_base/Log_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/mul/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 10.0
          }
        }
      }
    }
    node_def {
      name: "power_to_db/mul"
      op: "Mul"
      input: "power_to_db/mul/x:output:0"
      input: "power_to_db/log_with_base/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/Maximum/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.000000013351432e-10
          }
        }
      }
    }
    node_def {
      name: "power_to_db/Maximum"
      op: "Maximum"
      input: "power_to_db/Maximum/x:output:0"
      input: "power_to_db/Max:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/log_with_base_1/Log"
      op: "Log"
      input: "power_to_db/Maximum:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/log_with_base_1/Log_1/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 10.0
          }
        }
      }
    }
    node_def {
      name: "power_to_db/log_with_base_1/Log_1"
      op: "Log"
      input: "power_to_db/log_with_base_1/Log_1/x:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/log_with_base_1/truediv"
      op: "RealDiv"
      input: "power_to_db/log_with_base_1/Log:y:0"
      input: "power_to_db/log_with_base_1/Log_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/mul_1/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 10.0
          }
        }
      }
    }
    node_def {
      name: "power_to_db/mul_1"
      op: "Mul"
      input: "power_to_db/mul_1/x:output:0"
      input: "power_to_db/log_with_base_1/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/sub"
      op: "Sub"
      input: "power_to_db/mul:z:0"
      input: "power_to_db/mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "power_to_db/Max_1"
      op: "Max"
      input: "power_to_db/sub:z:0"
      input: "power_to_db/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "power_to_db/sub_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 80.0
          }
        }
      }
    }
    node_def {
      name: "power_to_db/sub_1"
      op: "Sub"
      input: "power_to_db/Max_1:output:0"
      input: "power_to_db/sub_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/Maximum_1"
      op: "Maximum"
      input: "power_to_db/sub:z:0"
      input: "power_to_db/sub_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 40.0
          }
        }
      }
    }
    node_def {
      name: "power_to_db/add"
      op: "Add"
      input: "power_to_db/Maximum_1:z:0"
      input: "power_to_db/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "power_to_db/truediv/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 40.0
          }
        }
      }
    }
    node_def {
      name: "power_to_db/truediv"
      op: "RealDiv"
      input: "power_to_db/add:z:0"
      input: "power_to_db/truediv/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mulaw_encode_cast"
      value: "MuLaw_Encode/Cast:y:0"
    }
    ret {
      key: "normalize"
      value: "normalize_0:z:0"
    }
    ret {
      key: "one_hot"
      value: "one_hot_0:output:0"
    }
    ret {
      key: "power_to_db_truediv"
      value: "power_to_db/truediv:z:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_JDgOH9okeRc"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "parsesingleexample_parsesingleexample"
        type: DT_FLOAT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "ParseSingleExample/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "arg0"
      input: "ParseSingleExample/Const:output:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "wave"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "parsesingleexample_parsesingleexample"
      value: "ParseSingleExample/ParseSingleExample:dense_values:0"
    }
  }
}
versions {
  producer: 27
  min_consumer: 12
}
